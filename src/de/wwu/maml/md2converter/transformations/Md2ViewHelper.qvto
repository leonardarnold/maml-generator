library Md2ViewHelper;

import Md2Helper;

modeltype MAML "strict" uses "http://de/wwu/md2dot0";
modeltype MAMLdata "strict" uses "http://de/wwu/md2dot0data";
modeltype MD2 "strict" uses "http://www.wwu.de/md2/framework/MD2";

helper Model::distinctViewElements(): Set(ViewElement) {
	log(".distinctViewElements");
	
	// Custom types
	self.useCases->forEach(uc) {
		uc.dataTypes->forEach(dataType){
			dataType->oclAsType(ProcessElement).lookupOrCreateViewElement();
		};
	};

	return null;
}

helper ProcessElement::lookupOrCreateViewElement(): ViewElementType {
	if(resolveone(dataType : ModelElement | dataType.name = self.metaClassName().toFirstUpper()) <> null) then {
		return null;//	return resolveone(dataType : ModelElement | dataType.name = self.metaClassName().toFirstUpper());
	} endif;
	return self.map toViewElement();
}

mapping ProcessElement::toViewElement(): ViewGUIElement {
	name := "test";
}

mapping MD2::ViewElementType::toReferencedType(): AbstractViewGUIElementRef {
	ref := self;
	tail := null; // TODO/necessary for MAML?
}