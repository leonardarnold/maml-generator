import Md2Helper;

modeltype MAML "strict" uses "http://de/wwu/md2dot0";
modeltype MD2 "strict" uses "http://www.wwu.de/md2/framework/MD2";

transformation Md2ControllerLayerTransformation(in Source: MAML, out Target: MD2);

main() {
	log("Start ControllerLayer transformation");
	Source.rootObjects()[Model] -> map toControllerLayer();
}

mapping Model::toControllerLayer(): MD2Model {
	log("toControllerLayer");
	
	package := self.map toPackage();
	modelLayer := self.map toController();
}

mapping Model::toPackage(): PackageDefinition {
	pkgName := "projectName.controllers" 
}

mapping Model::toController(): Controller {
	//controllerElements := self.map toContentProvider();
	//controllerElements += self.map toValidator();
	controllerElements += self.map toRemoteConnection();
	//controllerElements += self.map toWorkflowElement();
	//controllerElements += self.map toWebServiceCall();
	controllerElements += self.map toMain();
}

mapping Model::toContentProvider(): ContentProvider {
	// TODO
}

mapping Model::toValidator(): Validator {
	// TODO
}

mapping Model::toMain(): Main {
	log("toMain");
	
	appVersion := "1.0.0"; // No alternatives implemented in MAML
	modelVersion := "1.0.0"; // No alternative options implemented in MAML
	workflowManager := self.getRemoteConnection(self.getDefaultConnectionName()); // No alternatives implemented in MAML
	defaultConnection := self.getRemoteConnection(self.getDefaultConnectionName()); // No alternatives implemented in MAML
	fileUploadConnection := self.getRemoteConnection(self.getDefaultConnectionName()); // No alternatives implemented in MAML
}

mapping Model::toRemoteConnection(): RemoteConnection {
	log("toRemoteConnection");
	
	name := _debug(self.getDefaultConnectionName());
	uri := "http://localhost:8080/" + safeVal(self.projectName, DEFAULT_PROJECT_NAME).toFirstUpper() + ".backend/service/";
	// TODO
}

mapping Model::toWorkflowElement(): WorkflowElement {
	// TODO
}

mapping Model::toWebServiceCall(): WebServiceCall {
	// TODO
}
